{"version":3,"sources":["styles/Main.styles.js","components/Dialog/ConfirmDialog.js","redux/palettes/types.js","service/axios.js","redux/palettes/actions.js","redux/alert/types.js","redux/alert/actions.js","redux/user/types.js","utils/userHelper.js","redux/user/actions.js","components/MiniPalette.js","components/PaletteList.js","components/FormField/Email.js","components/FormField/Password.js","components/Dialog/LoginDialog.js","components/FormField/Username.js","components/FormField/ConfirmPassword.js","components/Dialog/RegisterDialog.js","components/AlertMessage.js","pages/Main.js","redux/newPalette/types.js","redux/newPalette/actions.js","components/ColorBoxCanDelete.js","styles/ColorBox.styles.js","components/ColorBoxBack.js","components/ColorBox.js","components/ColorBoxMain.js","styles/PaletteNavbar.styles.js","components/PaletteNavbar.js","components/PaletteFooter.js","utils/colorHelper.js","pages/Palette.js","pages/SingleColorPalette.js","components/NewPaletteAppBar.js","components/NewPaletteAddColorForm.js","data/ColorPalette.data.js","components/NewPaletteDrawer.js","utils/paletteHelper.js","components/NewPaletteAddNameForm.js","components/NewPaletteAddEmoji.js","components/Dialog/NewPaletteSaveDialog.js","components/SortableColorBoxList.js","styles/NewPaletteMain.styles.js","pages/NewPaletteMain.js","pages/AuthPage.js","App.js","redux/newPalette/reducer.js","redux/palettes/reducer.js","redux/user/reducer.js","redux/alert/reducer.js","redux/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["styles","root","display","justifyContent","padding","content","backgroundColor","borderRadius","nav","color","alignItems","lineHeight","logo","fontSize","fontWeight","link","marginLeft","yellowBtn","yellow","ConfirmDialog","open","title","handleCancel","handleConfirm","Dialog","aria-labelledby","DialogTitle","id","List","ListItem","button","onClick","ListItemAvatar","Avatar","style","blue","ListItemText","primary","red","setAuthToken","token","axios","defaults","headers","common","apiCall","method","path","data","Promise","resolve","reject","toLowerCase","then","res","catch","err","response","console","log","status","message","setUserPalettes","palettes","type","types","alertError","msg","setJwtTokenToLocalStorage","localStorage","setItem","Math","floor","Date","now","setCurrentUser","user","logout","dispatch","clear","MiniPalette","state","confirm","loading","handleDelete","e","stopPropagation","setState","closeDiglog","deletePalette","props","removePalette","alertSuccess","error","this","colors","isAuthenticated","className","to","map","c","i","Grid","key","item","xs","name","emoji","Component","withRouter","connect","remove","palette","list","container","spacing","component","TransitionGroup","p","CSSTransition","classNames","timeout","md","sm","Email","handleChange","errorMsg","TextField","autoFocus","label","helperText","onChange","Password","LoginDialog","email","password","errors","target","value","handleSubmit","preventDefault","login","handleClose","closeDialog","isUnLocked","onSubmit","DialogContent","grey","DialogActions","margin","Button","variant","disabled","username","Username","ConfirmPassword","RegisterDialog","confirmPassword","register","Alert","elevation","alert","dismissAlert","Snackbar","autoHideDuration","onClose","onEmptied","severity","withStyles","classes","useState","goRegister","setGoRegister","goLogin","setGoLogin","goLogout","setGoLogout","closeLogoutDialog","Container","maxWidth","marginRight","setPaletteName","payload","setPaletteEmoji","addPaletteColor","theme","width","height","position","marginBottom","transform","transformOrigin","opacity","cursor","breakpoints","down","left","bottom","chroma","luminance","icon","right","transition","removePaletteColor","SortableElement","outline","border","background","textTransform","backBtn","top","seeMoreBtn","copyBtn","overlayBg","zIndex","overlayMsg","flexDirection","transitionDelay","textAlign","ColorBoxBack","handleClick","history","goBack","ColorBox","copied","handelCopy","setTimeout","handleMore","push","match","params","colorId","renderContent","text","onCopy","ColorBoxMain","fontFamily","textDecoration","slider","marginTop","select","PaletteNavbar","handleColorChange","level","changeLevel","handleFormatChange","changeFormat","format","pathname","back","Typography","Slider","track","min","max","step","FormControl","Select","MenuItem","PaletteFooter","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","darken","hex","getRange","mode","reverse","replace","rgb","css","rgba","Palette","renderColorBoxes","_props","find","SingleColorPalette","shades","React","NewPaletteAppBar","handleDrawerOpen","handleDialogOpen","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","aria-label","edge","menuButton","hide","noWrap","NewPaletteAddColorForm","ValidatorForm","addValidationRule","removeValidationRule","length","validators","errorMessages","clearPalette","useTheme","setColor","handleDrawerClose","copies","slice","reduce","array1","array2","concat","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","direction","Divider","drawerBody","gutterBottom","Chrome","onChangeComplete","addRandomColor","rc","random","getRandomColor","findIndex","filter","NewPaletteAddNameForm","handleNext","handleDialogClose","DialogContentText","fullWidth","paletteName","set","onSelect","native","NewPaletteSaveDialog","next","SortableContainer","contentBody","index","useStyles","makeStyles","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","flexShrink","mixins","toolbar","flexGrow","contentShift","addPalette","add","sortPaletteColors","alertErrorThenRefreshPage","delay","dispach","window","location","reload","openDrawer","setOpenDrawer","openDialog","setOpenDialog","reset","CssBaseline","axis","onSortEnd","oldIndex","newIndex","arrayMove","AuthPage","children","slideEffect","action","exact","render","INIT_STATE","newPaletteReducer","actions","paletteListReducer","userReducer","Object","keys","alertReducer","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","composeWithDevTools","Boolean","hostname","getItem","timestamp","parseInt","decoded","jwtDecoder","iat","exp","initUser","process","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82df4109.chunk.js","sourcesContent":["import yellow from \"@material-ui/core/colors/yellow\";\n\nconst styles = {\n    root: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        padding: \"20px 0px\",\n    },\n    content: {\n        backgroundColor: \"rgba(255, 255, 255,0.3)\",\n        padding: \"0px 20px 40px 20px\",\n        borderRadius: \"15px\",\n    },\n    nav: {\n        color: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"25px 0px\",\n        lineHeight: \"20pt\",\n    },\n    logo: {\n        fontSize: \"20pt\",\n        fontWeight: \"bold\",\n    },\n    link: {\n        marginLeft: \"auto\",\n    },\n    yellowBtn: {\n        backgroundColor: yellow[800],\n        color: \"white\",\n        \"&:hover\": {\n            backgroundColor: yellow[900],\n        },\n    },\n};\n\nexport default styles;\n","import React from \"react\";\nimport {\n    Dialog,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemAvatar,\n    Avatar,\n    ListItemText,\n} from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst ConfirmDialog = ({ open, title, handleCancel, handleConfirm }) => {\n    return (\n        <Dialog aria-labelledby=\"confirm-dialog-title\" open={open}>\n            <DialogTitle id=\"confirm-dialog-title\">{title}</DialogTitle>\n            <List>\n                <ListItem button onClick={handleConfirm}>\n                    <ListItemAvatar>\n                        <Avatar\n                            style={{\n                                backgroundColor: blue[100],\n                                color: blue[600],\n                            }}\n                        >\n                            <CheckIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"ok\" />\n                </ListItem>\n                <ListItem button onClick={handleCancel}>\n                    <ListItemAvatar>\n                        <Avatar\n                            style={{\n                                backgroundColor: red[100],\n                                color: red[600],\n                            }}\n                        >\n                            <CloseIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"Cancel\" />\n                </ListItem>\n            </List>\n            <br />\n        </Dialog>\n    );\n};\n\nexport default ConfirmDialog;\n","export default {\n    ADD_PALETTE: \"ADD_PALETTE\",\n    REMOVE_PALETTE: \"REMOVE_PALETTE\",\n    SET_PALETTES: \"SET_PALETTES\",\n    RESET_PALETTES: \"RESET_PALETTES\",\n};\n","import axios from \"axios\";\nconst API_URL = \"https://color-palette-server.herokuapp.com/api\"; //process.env.REACT_APP_API_URI;\n\nexport const setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport const apiCall = (method, path, data) => {\n    return new Promise((resolve, reject) => {\n        return axios[method.toLowerCase()](API_URL + path, data)\n            .then((res) => {\n                return resolve(res.data);\n            })\n            .catch((err) => {\n                if (err.response) return reject(err.response);\n                else {\n                    console.log(err);\n                    return reject({\n                        status: 500,\n                        data: { message: \"Unknown.\" },\n                    });\n                }\n            });\n    });\n};\n","import types from \"./types\";\nimport { apiCall } from \"../../service/axios\";\n\nconst add = (palette) => ({\n    type: types.ADD_PALETTE,\n    palette,\n});\n\nconst remove = (id) => ({\n    type: types.REMOVE_PALETTE,\n    id,\n});\n\nexport const resetPalettes = () => ({\n    type: types.RESET_PALETTES,\n});\n\nexport const setUserPalettes = (palettes) => ({\n    type: types.SET_PALETTES,\n    palettes,\n});\n\nexport const addPalette = (palette) => (dispatch) => {\n    return new Promise((resolve, reject) => {\n        return apiCall(\"post\", \"/palettes\", palette)\n            .then((res) => {\n                dispatch(add(res.palette));\n                resolve();\n            })\n            .catch(reject);\n    });\n};\n\nexport const removePalette = (id) => (dispatch) => {\n    return new Promise((resolve, reject) => {\n        return apiCall(\"delete\", \"/palettes/\" + id)\n            .then((res) => {\n                dispatch(remove(res.palette.id));\n                resolve();\n            })\n            .catch(({ data }) => reject(data));\n    });\n};\n\nexport const reloadPalettes = () => {\n    return new Promise((resolve, reject) => {\n        return apiCall(\"get\", \"/palettes\")\n            .then((res) => {\n                resolve(res);\n            })\n            .catch(({ data }) => reject(data));\n    });\n};\n","export default {\n    ALERT_SUCCESS: \"success\",\n    ALERT_ERROR: \"error\",\n    ALERT_DISMISS: \"ALERT_DISMISS\",\n};\n","import types from \"./types\";\n\nexport const ALERT_DISMISS_DELAY = 3000;\n\nexport const alertSuccess = (msg) => ({\n    type: types.ALERT_SUCCESS,\n    msg,\n});\n\nexport const alertError = (msg) => ({\n    type: types.ALERT_ERROR,\n    msg,\n});\n\nexport const dismissAlert = () => ({\n    type: types.ALERT_DISMISS,\n});\n\nexport const alertErrorThenRefreshPage = (msg, delay) => (dispach) => {\n    dispach(alertError(msg));\n    setTimeout(() => window.location.reload(false), delay);\n};\n","export default {\n    SET_USER: \"SET_USER\",\n};\n","import jwtDecoder from \"jwt-decode\";\nimport { setAuthToken } from \"../service/axios\";\nconst JWT_TOKEN = \"jwtToken\";\nconst JWT_TIMESTAMP = \"jwtTimestamp\";\n\nexport const getJwtTokenFromLocalStorage = () => {\n    return localStorage.getItem(JWT_TOKEN);\n};\n\nexport const setJwtTokenToLocalStorage = (token) => {\n    localStorage.setItem(JWT_TOKEN, token);\n    localStorage.setItem(JWT_TIMESTAMP, Math.floor(Date.now() / 1000));\n};\n\nexport const initUser = () => {\n    let user = {};\n    let token = getJwtTokenFromLocalStorage();\n    if (token) {\n        let timestamp = parseInt(localStorage.getItem(JWT_TIMESTAMP));\n        let decoded = jwtDecoder(token);\n        let { id, username, iat, exp } = decoded;\n        let currentTime = Math.floor(Date.now() / 1000);\n        if (exp >= iat + (currentTime - timestamp)) {\n            user = { id, username };\n            setAuthToken(token);\n        }\n    }\n    return user;\n};\n","import types from \"./types\";\nimport { setUserPalettes, resetPalettes } from \"../palettes/actions\";\nimport { setAuthToken, apiCall } from \"../../service/axios\";\nimport { setJwtTokenToLocalStorage } from \"../../utils/userHelper\";\n\nexport const setCurrentUser = (user) => ({\n    type: types.SET_USER,\n    user,\n});\n\nexport const register = (username, email, password, confirmPassword) => (\n    dispatch\n) => {\n    return new Promise((resolve, reject) => {\n        return apiCall(\"post\", \"/register\", {\n            username,\n            email,\n            password,\n            confirmPassword,\n        })\n            .then((res) => {\n                setJwtTokenToLocalStorage(res.token);\n                setAuthToken(res.token);\n                dispatch(setUserPalettes(res.palettes));\n                dispatch(\n                    setCurrentUser({\n                        id: res.id,\n                        username: res.username,\n                    })\n                );\n                resolve();\n            })\n            .catch(({ data }) => reject(data));\n    });\n};\n\nexport const login = (email, password) => (dispatch) => {\n    return new Promise((resolve, reject) => {\n        return apiCall(\"post\", \"/login\", { email, password })\n            .then((res) => {\n                setJwtTokenToLocalStorage(res.token);\n                setAuthToken(res.token);\n                dispatch(setUserPalettes(res.palettes));\n                dispatch(\n                    setCurrentUser({\n                        id: res.id,\n                        username: res.username,\n                    })\n                );\n                resolve();\n            })\n            .catch(({ data }) => reject(data));\n    });\n};\n\nexport const logout = () => (dispatch) => {\n    localStorage.clear();\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    dispatch(resetPalettes());\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid } from \"@material-ui/core\";\nimport ConfirmDialog from \"./Dialog/ConfirmDialog\";\nimport { removePalette } from \"../redux/palettes/actions\";\nimport { alertSuccess, alertError } from \"../redux/alert/actions\";\nimport { logout } from \"../redux/user/actions\";\nimport \"../styles/MiniPalette.css\";\n\nclass MiniPalette extends Component {\n    state = {\n        confirm: false,\n        loading: false,\n    };\n    handleDelete = (e) => {\n        e.stopPropagation();\n        this.setState({ confirm: true });\n    };\n    closeDiglog = () => this.setState({ confirm: false });\n    deletePalette = () => {\n        if (this.state.loading) return;\n        this.setState({ loading: true });\n        this.closeDiglog();\n        this.props\n            .removePalette(this.props.id)\n            .then(() => this.props.alertSuccess(\"Palette is deleted.\"))\n            .catch((e) => {\n                this.props.logout();\n                this.props.alertError(e.error.message);\n            });\n    };\n    render() {\n        const { id, colors, isAuthenticated } = this.props;\n        return (\n            <div className=\"MiniPalette\">\n                <Link to={`/palette/${id}`}>\n                    <div className=\"MiniPalette-colors\">\n                        {colors.map((c, i) => (\n                            <Grid key={`MiniPalette-${id}-${i}`} item xs={3}>\n                                <div\n                                    className=\"MiniPalette-color\"\n                                    style={{ backgroundColor: c.color }}\n                                ></div>\n                            </Grid>\n                        ))}\n                    </div>\n                    <div className=\"MiniPalette-footer\">\n                        {this.props.name}\n                        <span className=\"MiniPalette-emoji\">\n                            {this.props.emoji}\n                        </span>\n                    </div>\n                </Link>\n                {isAuthenticated && (\n                    <DeleteIcon\n                        className=\"MiniPalette-delete\"\n                        fontSize=\"large\"\n                        onClick={this.handleDelete}\n                    />\n                )}\n                <ConfirmDialog\n                    title=\"Delete This Palette?\"\n                    open={this.state.confirm}\n                    handleCancel={this.closeDiglog}\n                    handleConfirm={this.deletePalette}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.user.isAuthenticated,\n});\n\nexport default withRouter(\n    connect(mapStateToProps, {\n        logout,\n        removePalette,\n        alertSuccess,\n        alertError,\n    })(MiniPalette)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport MiniPalette from \"./MiniPalette\";\n\nconst PaletteList = ({ list }) => (\n    <Grid container spacing={3} component={TransitionGroup}>\n        {list.map((p) => (\n            <CSSTransition key={p.id} classNames=\"fade\" timeout={500}>\n                <Grid item md={4} sm={6} xs={12}>\n                    <MiniPalette {...p} />\n                </Grid>\n            </CSSTransition>\n        ))}\n    </Grid>\n);\n\nconst mapStateToProps = (state) => ({\n    list: state.palettes.list,\n});\n\nexport default connect(mapStateToProps)(PaletteList);\n","import React from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/Email\";\n\nconst Email = ({ color, handleChange, errorMsg }) => {\n    return (\n        <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n                <EmailIcon style={{ color }} />\n            </Grid>\n            <Grid item>\n                <TextField\n                    error={!!errorMsg}\n                    autoFocus\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    helperText={errorMsg}\n                    onChange={handleChange}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Email;\n","import React from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst Password = ({ color, handleChange, errorMsg }) => {\n    return (\n        <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n                <LockIcon style={{ color }} />\n            </Grid>\n            <Grid item>\n                <TextField\n                    error={!!errorMsg}\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    helperText={errorMsg}\n                    onChange={handleChange}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Password;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n} from \"@material-ui/core\";\n\nimport grey from \"@material-ui/core/colors/grey\";\nimport Email from \"../FormField/Email\";\nimport Password from \"../FormField/Password\";\n\nimport { login } from \"../../redux/user/actions\";\n\nclass LoginDialog extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        errors: {},\n        loading: false,\n    };\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ errors: {}, loading: true }, () => {\n            this.props\n                .login(this.state.email, this.state.password)\n                .then(() => this.handleClose())\n                .catch((e) => {\n                    if (e.error && e.error.errors) {\n                        this.setState({\n                            errors: e.error.errors,\n                            loading: false,\n                        });\n                    } else {\n                        // unknown error...\n                        console.log(e);\n                    }\n                });\n        });\n    };\n    handleClose = () => {\n        this.setState({ email: \"\", password: \"\", errors: {}, loading: false });\n        this.props.closeDialog();\n    };\n    render() {\n        const { open } = this.props;\n        const { errors, email, password, loading } = this.state;\n        const isUnLocked = email !== \"\" && password !== \"\" && !loading;\n        return (\n            <Dialog aria-labelledby=\"login-dialog-title\" open={open}>\n                <form onSubmit={this.handleSubmit}>\n                    <DialogTitle id=\"login-dialog-title\">\n                        Login to create palettes\n                    </DialogTitle>\n                    <DialogContent>\n                        <Email\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={email}\n                            errorMsg={errors.email}\n                        />\n                        <Password\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={password}\n                            errorMsg={errors.password}\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ margin: \"10px 20px 20px 20px\" }}>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={!isUnLocked}\n                        >\n                            Login\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(null, { login })(LoginDialog);\n","import React from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst Username = ({ color, handleChange, errorMsg }) => {\n    return (\n        <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n                <AccountCircleIcon style={{ color }} />\n            </Grid>\n            <Grid item>\n                <TextField\n                    error={!!errorMsg}\n                    name=\"username\"\n                    label=\"Username\"\n                    helperText={errorMsg}\n                    onChange={handleChange}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Username;\n","import React from \"react\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\n\nconst ConfirmPassword = ({ color, handleChange, errorMsg }) => {\n    return (\n        <Grid container spacing={2} alignItems=\"flex-end\">\n            <Grid item>\n                <CheckCircleIcon style={{ color }} />\n            </Grid>\n            <Grid item>\n                <TextField\n                    error={!!errorMsg}\n                    name=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    helperText={errorMsg}\n                    onChange={handleChange}\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ConfirmPassword;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n} from \"@material-ui/core\";\n\nimport grey from \"@material-ui/core/colors/grey\";\nimport Username from \"../FormField/Username\";\nimport Email from \"../FormField/Email\";\nimport Password from \"../FormField/Password\";\nimport ConfirmPassword from \"../FormField/ConfirmPassword\";\n\nimport { register } from \"../../redux/user/actions\";\n\nclass RegisterDialog extends Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: {},\n        loading: false,\n    };\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { username, email, password, confirmPassword } = this.state;\n        this.setState({ errors: {}, loading: true }, () => {\n            this.props\n                .register(username, email, password, confirmPassword)\n                .then(() => this.handleClose())\n                .catch((e) => {\n                    if (e.error && e.error.errors) {\n                        this.setState({\n                            errors: e.error.errors,\n                            loading: false,\n                        });\n                    } else {\n                        // unknown error...\n                        console.log(e);\n                    }\n                });\n        });\n    };\n    handleClose = () => {\n        this.setState({\n            errors: {},\n            loading: false,\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n        });\n        this.props.closeDialog();\n    };\n    render() {\n        const { open } = this.props;\n        const {\n            errors,\n            username,\n            email,\n            password,\n            confirmPassword,\n            loading,\n        } = this.state;\n        const isUnLocked =\n            username !== \"\" &&\n            email !== \"\" &&\n            password !== \"\" &&\n            confirmPassword !== \"\" &&\n            !loading;\n        return (\n            <Dialog aria-labelledby=\"login-dialog-title\" open={open}>\n                <form onSubmit={this.handleSubmit}>\n                    <DialogTitle id=\"login-dialog-title\">\n                        Login to create palettes\n                    </DialogTitle>\n                    <DialogContent>\n                        <Email\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={email}\n                            errorMsg={errors.email}\n                        />\n                        <Username\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={username}\n                            errorMsg={errors.username}\n                        />\n                        <Password\n                            name=\"password\"\n                            label=\"Password\"\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={password}\n                            errorMsg={errors.password}\n                        />\n                        <ConfirmPassword\n                            name=\"confirmPassword\"\n                            password=\"Confirm Password\"\n                            color={grey[500]}\n                            handleChange={this.handleChange}\n                            value={confirmPassword}\n                            errorMsg={errors.confirmPassword}\n                        />\n                    </DialogContent>\n                    <DialogActions style={{ margin: \"10px 20px 20px 20px\" }}>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={!isUnLocked}\n                        >\n                            Register\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        );\n    }\n}\n\nexport default connect(null, { register })(RegisterDialog);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { dismissAlert, ALERT_DISMISS_DELAY } from \"../redux/alert/actions\";\n\nconst Alert = (props) => <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n\nconst AlertMessage = ({ alert, dismissAlert }) => {\n    const handleClose = () => dismissAlert();\n    return (\n        <Snackbar\n            open={alert.open}\n            autoHideDuration={ALERT_DISMISS_DELAY}\n            onClose={handleClose}\n            onEmptied={handleClose}\n        >\n            <Alert onClose={handleClose} severity={alert.type}>\n                {alert.message}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    alert: state.alert,\n});\n\nexport default connect(mapStateToProps, { dismissAlert })(AlertMessage);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"../styles/Main.styles\";\nimport PaletteList from \"../components/PaletteList\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport LoginDialog from \"../components/Dialog/LoginDialog\";\nimport ConfirmDialog from \"../components/Dialog/ConfirmDialog\";\nimport { logout } from \"../redux/user/actions\";\nimport RegisterDialog from \"../components/Dialog/RegisterDialog\";\nimport AlertMessage from \"../components/AlertMessage\";\n\nconst Main = ({ classes, isAuthenticated, logout }) => {\n    const [goRegister, setGoRegister] = useState(false);\n    const closeRegisterDialog = () => setGoRegister(false);\n    const [goLogin, setGoLogin] = useState(false);\n    const closeLoginDialog = () => setGoLogin(false);\n    const [goLogout, setGoLogout] = useState(false);\n    const closeLogoutDialog = () => setGoLogout(false);\n    const handleLogout = () => {\n        logout();\n        closeLogoutDialog();\n    };\n\n    const renderCreatePaletteButton = () => (\n        <div className={classes.link}>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginRight: \"5px\" }}\n                className={classes.yellowBtn}\n                onClick={() => setGoLogout(true)}\n            >\n                Logout\n            </Button>\n            <Link to=\"/palette/new\">\n                <Button variant=\"contained\" color=\"secondary\">\n                    Create Palette\n                </Button>\n            </Link>\n        </div>\n    );\n    const renderLoginAndRegisterButtons = () => (\n        <div className={classes.link}>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginRight: \"5px\" }}\n                onClick={() => setGoRegister(true)}\n            >\n                register\n            </Button>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => setGoLogin(true)}\n            >\n                login\n            </Button>\n        </div>\n    );\n    return (\n        <Container className={classes.root} maxWidth={false}>\n            <Container className={classes.content} maxWidth=\"md\">\n                <header className={classes.nav}>\n                    <div className={classes.logo}>Color Palette</div>\n                    {isAuthenticated\n                        ? renderCreatePaletteButton()\n                        : renderLoginAndRegisterButtons()}\n                </header>\n                <PaletteList />\n            </Container>\n            <ConfirmDialog\n                title=\"Are you sure to log out?\"\n                open={goLogout}\n                handleCancel={closeLogoutDialog}\n                handleConfirm={handleLogout}\n            />\n            <LoginDialog open={goLogin} closeDialog={closeLoginDialog} />\n            <RegisterDialog\n                open={goRegister}\n                closeDialog={closeRegisterDialog}\n            />\n            <AlertMessage />\n        </Container>\n    );\n};\n\nexport default withStyles(styles)(connect(null, { logout })(Main));\n","export default {\n    SET_NAME: \"SET_NEW_PALETTE_NAME\",\n    SET_EMOJI: \"SET_NEW_PALETTE_EMOJI\",\n    ADD_COLOR: \"ADD_NEW_PALETTE_COLOR\",\n    REMOVE_COLOR: \"REMOVE_NEW_PALETTE_COLOR\",\n    CLEAR: \"CLEAR_NEW_PALETTE\",\n    SORT: \"SORT_NEW_PALETTE_COLORS\",\n};\n","import types from \"./types\";\n\nexport const setPaletteName = (name) => ({\n    type: types.SET_NAME,\n    payload: name,\n});\n\nexport const setPaletteEmoji = (emoji) => ({\n    type: types.SET_EMOJI,\n    payload: emoji,\n});\n\nexport const addPaletteColor = (color) => ({\n    type: types.ADD_COLOR,\n    payload: color,\n});\n\nexport const removePaletteColor = (name) => ({\n    type: types.REMOVE_COLOR,\n    payload: name,\n});\n\nexport const clearPalette = () => ({\n    type: types.CLEAR,\n});\n\nexport const sortPaletteColors = (colors) => ({\n    type: types.SORT,\n    payload: colors,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport chroma from \"chroma-js\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { removePaletteColor } from \"../redux/newPalette/actions\";\nimport { SortableElement } from \"react-sortable-hoc\";\n\nconst styles = (theme) => ({\n    root: {\n        width: \"20%\",\n        height: \"25%\",\n        margin: \"0px auto\",\n        display: \"inline-block\",\n        position: \"relative\",\n        marginBottom: \"-5px\",\n        backgroundColor: ({ backgroundColor }) => backgroundColor,\n        \"&:hover svg\": {\n            transform: \"scale(2)\",\n            transformOrigin: \"50% 50%\",\n            opacity: \"0.7\",\n            cursor: \"pointer\",\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            width: \"50%\",\n            height: \"10%\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"100%\",\n            height: \"5%\",\n        },\n    },\n    name: {\n        position: \"absolute\",\n        left: \"20px\",\n        bottom: \"20px\",\n        fontSize: \"12pt\",\n        color: ({ backgroundColor }) => {\n            return chroma(backgroundColor).luminance() < 0.25\n                ? \"white\"\n                : \"black\";\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: \"16px\",\n            bottom: \"5px\",\n        },\n    },\n    icon: {\n        position: \"absolute\",\n        right: \"20px\",\n        bottom: \"20px\",\n        fontSize: \"16pt\",\n        color: ({ backgroundColor }) => {\n            return chroma(backgroundColor).luminance() < 0.25\n                ? \"white\"\n                : \"black\";\n        },\n        transition: \"all 0.2s linear\",\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: \"16px\",\n            bottom: \"5px\",\n        },\n    },\n});\n\nconst ColorBoxCanDelete = ({ classes, name, removePaletteColor }) => {\n    const handleDelete = () => removePaletteColor(name);\n    return (\n        <div className={classes.root}>\n            <div className={classes.name}>{name}</div>\n            <DeleteIcon className={classes.icon} onClick={handleDelete} />\n        </div>\n    );\n};\n\nexport default withStyles(styles)(\n    connect(null, { removePaletteColor })(SortableElement(ColorBoxCanDelete))\n);\n","import chroma from \"chroma-js\";\nconst styles = {\n    root: {\n        width: \"100%\",\n        height: \"100%\",\n        margin: \"0px auto\",\n        display: \"inline-block\",\n        position: \"relative\",\n        marginBottom: \"-3px\",\n\n        \"& button\": {\n            outline: \"none\",\n            border: \"none\",\n            margin: \"0px\",\n            color: \"white\",\n            backgroundColor: (props) => {\n                const { background } = props;\n                if (!background) return \"rgba(255, 255, 255, 0.25)\";\n                return chroma(background).luminance() >= 0.25\n                    ? \"rgba(0, 0, 0, 0.3)\"\n                    : \"rgba(255, 255, 255, 0.25)\";\n            },\n            textTransform: \"uppercase\",\n            cursor: \"pointer\",\n        },\n        \"&:hover button\": {\n            opacity: 1,\n        },\n    },\n    name: {\n        position: \"absolute\",\n        left: \"5px\",\n        bottom: \"5px\",\n        fontSize: \"10pt\",\n        color: (props) => {\n            const { background } = props;\n            if (!background) return \"white\";\n            return chroma(props.background).luminance() < 0.25\n                ? \"white\"\n                : \"black\";\n        },\n    },\n    backBtn: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        width: \"100px\",\n        height: \"40px\",\n        transform: \"translate(-50px, -20px)\",\n    },\n    seeMoreBtn: {\n        position: \"absolute\",\n        right: \"0px\",\n        bottom: \"0px\",\n        padding: \"5px 10px\",\n        fontSize: \"8pt\",\n    },\n    copyBtn: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        width: \"100px\",\n        height: \"40px\",\n        transform: \"translate(-50px, -20px)\",\n        opacity: \"0\",\n        transition: \"opacity 1s\",\n    },\n    overlayBg: {\n        opacity: \"0\",\n        zIndex: \"1000\",\n        width: \"100%\",\n        height: \"100%\",\n        transition: \"transform 0.6s ease-in-out\",\n        transform: \"scale(0.1)\",\n\n        \"&.show\": {\n            opacity: \"1\",\n            transform: \"scale(50)\",\n            position: \"absolute\",\n        },\n    },\n    overlayMsg: {\n        position: \"fixed\",\n        top: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        right: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        opacity: \"0\",\n        transform: \"scale(0)\",\n        color: \"white\",\n        zIndex: \"1001\",\n\n        \"&.show\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n            transition: \"all 0.5s ease-in-out\",\n            transitionDelay: \"0.3s\",\n        },\n        \"& h1\": {\n            backgroundColor: \"rgba(255, 255, 255, 0.25)\",\n            width: \"100%\",\n            textAlign: \"center\",\n            textTransform: \"uppercase\",\n            padding: \"20px\",\n            fontWeight: \"400\",\n            marginBottom: \"0px\",\n            fontSize: \"48pt\",\n        },\n        \"& p\": {\n            fontSize: \"18pt\",\n            fontWeight: \"100\",\n        },\n    },\n};\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport style from \"../styles/ColorBox.styles\";\n\nclass ColorBoxBack extends Component {\n    handleClick = () => {\n        this.props.history.goBack();\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root} style={{ backgroundColor: \"black\" }}>\n                <div className=\"ColorBox-content\">\n                    <button\n                        className={classes.backBtn}\n                        onClick={this.handleClick}\n                    >\n                        back\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(style)(withRouter(ColorBoxBack));\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport style from \"../styles/ColorBox.styles\";\n\nclass ColorBox extends Component {\n    state = {\n        copied: false,\n    };\n\n    handelCopy = () => {\n        this.setState({ copied: true }, () => {\n            setTimeout(() => {\n                this.setState({ copied: false });\n            }, 2000);\n        });\n    };\n\n    handleMore = () => {\n        this.props.history.push(\n            `/palette/${this.props.match.params.id}/${this.props.colorId}`\n        );\n    };\n\n    renderContent = () => {\n        const { classes, background, name, type } = this.props;\n        return (\n            <div>\n                <div className={classes.name}>{name}</div>\n                <CopyToClipboard text={background} onCopy={this.handelCopy}>\n                    <button className={classes.copyBtn}>copy</button>\n                </CopyToClipboard>\n\n                {/* see more button */}\n                {type === \"more\" && (\n                    <button\n                        className={classes.seeMoreBtn}\n                        onClick={this.handleMore}\n                    >\n                        more\n                    </button>\n                )}\n            </div>\n        );\n    };\n\n    render() {\n        const { classes, background } = this.props;\n        const { copied } = this.state;\n        return (\n            <div className={classes.root} style={{ background }}>\n                {/* overlay */}\n                <div\n                    className={`${classes.overlayBg} ${copied && \"show\"}`}\n                    style={{ background }}\n                ></div>\n\n                {/* overlay message */}\n                <div className={`${classes.overlayMsg} ${copied && \"show\"}`}>\n                    <h1>copied!</h1>\n                    <p>{background}</p>\n                </div>\n\n                {/* content */}\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(style)(withRouter(ColorBox));\n","import React from \"react\";\n\nimport ColorBoxCanDelete from \"./ColorBoxCanDelete\";\nimport ColorBoxBack from \"./ColorBoxBack\";\nimport ColorBox from \"./ColorBox\";\n\nconst ColorBoxMain = (props) => {\n    const renderContent = (props) => {\n        switch (props.type) {\n            case \"canDelete\":\n                return <ColorBoxCanDelete {...props} />;\n            case \"back\":\n                return <ColorBoxBack />;\n            default:\n                return <ColorBox {...props} />;\n        }\n    };\n    return <>{renderContent(props)}</>;\n};\n\nexport default ColorBoxMain;\n","const styles = (theme) => ({\n    root: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        height: \"5vh\",\n        backgroundColor: \"white\",\n    },\n    logo: {\n        padding: \"0px 20px\",\n        fontSize: \"20px\",\n        backgroundColor: \"#eceff1\",\n        fontFamily: \"Roboto\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& a\": {\n            textDecoration: \"none\",\n            color: \"black\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            fontSize: \"5px\",\n            lineHeight: \"12px\",\n        },\n    },\n    slider: {\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& .MuiTypography-root\": {\n            textAlign: \"center\",\n            marginLeft: \"10px\",\n        },\n        \"& .MuiSlider-root\": {\n            width: 250,\n            margin: \"0px 10px\",\n        },\n        \"& .MuiSlider-thumb\": {\n            width: \"16px\",\n            height: \"16px\",\n            marginTop: \"-7px\",\n        },\n        \"& .MuiSlider-thumbColorPrimary\": {\n            color: \"green\",\n        },\n        [theme.breakpoints.down(\"xs\")]: {\n            \"& #palette-color-slider\": {\n                fontSize: \"5px\",\n                lineHeight: \"12px\",\n            },\n            \"& .MuiSlider-root\": {\n                width: 100,\n            },\n        },\n    },\n    select: {\n        marginLeft: \"auto\",\n        marginRight: \"0px\",\n        [theme.breakpoints.down(\"xs\")]: {\n            \"& .MuiInput-formControl\": {\n                fontSize: \"12px\",\n            },\n        },\n    },\n});\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport style from \"../styles/PaletteNavbar.styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass PaletteNavbar extends Component {\n    handleColorChange = (e, level) => {\n        this.props.changeLevel(level);\n    };\n\n    handleFormatChange = (e) => {\n        this.props.changeFormat(e.target.value);\n    };\n\n    render() {\n        const { classes, level, format, changeLevel } = this.props;\n        return (\n            <div className={classes.root}>\n                <div className={classes.logo}>\n                    <Link to={{ pathname: \"/\", params: { back: true } }}>\n                        Back to Color Palette\n                    </Link>\n                </div>\n                {changeLevel && (\n                    <div className={classes.slider}>\n                        <Typography id=\"palette-color-slider\">\n                            LV {level}\n                        </Typography>\n                        <Slider\n                            track={false}\n                            aria-labelledby=\"palette-color-slider\"\n                            value={level}\n                            min={100}\n                            max={900}\n                            step={100}\n                            onChange={this.handleColorChange}\n                        />\n                    </div>\n                )}\n                <FormControl className={classes.select}>\n                    <Select value={format} onChange={this.handleFormatChange}>\n                        <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n                        <MenuItem value=\"rgba\">\n                            RGBA - rgba(255,255,255, 1.0)\n                        </MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(style)(PaletteNavbar);\n","import React, { Component } from \"react\";\n\nimport \"../styles/PaletteFooter.css\";\n\nclass PaletteFooter extends Component {\n    render() {\n        return (\n            <div className=\"PaletteFooter\">\n                {this.props.name}\n                <span className=\"PaletteFooter-emoji\">{this.props.emoji}</span>\n            </div>\n        );\n    }\n}\n\nexport default PaletteFooter;\n","import chroma from \"chroma-js\";\nconst levels = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n    let newPalette = {\n        name: starterPalette.name,\n        id: starterPalette.id,\n        emoji: starterPalette.emoji,\n        colors: {},\n    };\n    for (let level of levels) {\n        newPalette.colors[level] = [];\n    }\n    for (let color of starterPalette.colors) {\n        let scale = getScale(color.color, 10).reverse();\n        for (let i in scale) {\n            newPalette.colors[levels[i]].push({\n                name: `${color.name} ${levels[i]}`,\n                id: color.name.toLowerCase().replace(/ /g, \"-\"),\n                hex: scale[i],\n                rgb: chroma(scale[i]).css(),\n                rgba: chroma(scale[i])\n                    .css()\n                    .replace(\"rgb\", \"rgba\")\n                    .replace(\")\", \",1.0)\"),\n            });\n        }\n    }\n    return newPalette;\n}\n\nfunction getRange(hexColor) {\n    const end = \"#fff\";\n    return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction getScale(hexColor, numberOfColors) {\n    return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\n}\n\nexport { generatePalette };\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport ColorBoxMain from \"../components/ColorBoxMain\";\nimport PaletteNavbar from \"../components/PaletteNavbar\";\nimport PaletteFooter from \"../components/PaletteFooter\";\n\nimport { generatePalette } from \"../utils/colorHelper\";\nimport \"../styles/Palette.css\";\nimport { Container, Grid } from \"@material-ui/core\";\n\nclass Palette extends Component {\n    constructor(props) {\n        super(props);\n\n        let id = props.match.params.id;\n        let palette = props.list.find((p) => p.id === id);\n        if (palette) {\n            this._props = { ...generatePalette(palette) };\n        }\n    }\n\n    state = {\n        format: \"hex\",\n        level: 500,\n    };\n\n    changeFormat = (format) => this.setState({ format });\n\n    changeLevel = (level) => this.setState({ level });\n\n    renderColorBoxes = () => {\n        const { level, format } = this.state;\n        return this._props.colors[level].map((c) => (\n            <Grid\n                key={`${this._props.id}-${c.name}`}\n                item\n                md={3}\n                sm={6}\n                xs={12}\n            >\n                <ColorBoxMain\n                    type=\"more\"\n                    colorId={c.id}\n                    background={c[format]}\n                    name={c.name}\n                />\n            </Grid>\n        ));\n    };\n\n    render() {\n        if (!this._props) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <Container className=\"Palette\" maxWidth={false}>\n                <PaletteNavbar\n                    level={this.state.level}\n                    format={this.state.format}\n                    changeFormat={this.changeFormat}\n                    changeLevel={this.changeLevel}\n                />\n                <Grid container className=\"Palette-colors\">\n                    {this.renderColorBoxes()}\n                </Grid>\n                <PaletteFooter\n                    name={this._props.name}\n                    emoji={this._props.emoji}\n                />\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    list: state.palettes.list,\n});\n\nexport default connect(mapStateToProps)(Palette);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { Container, Grid } from \"@material-ui/core\";\nimport ColorBoxMain from \"../components/ColorBoxMain\";\nimport PaletteNavbar from \"../components/PaletteNavbar\";\nimport PaletteFooter from \"../components/PaletteFooter\";\nimport \"../styles/Palette.css\";\nimport { generatePalette } from \"../utils/colorHelper\";\n\nclass SingleColorPalette extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let id = props.match.params.id;\n        let colorId = props.match.params.colorId;\n        let palette = props.list.find((p) => p.id === id);\n        if (palette) {\n            let colors = generatePalette(palette).colors;\n            let shades = [];\n            for (let key in colors) {\n                if (key !== \"0\") {\n                    shades.push(colors[key].find((c) => c.id === colorId));\n                }\n            }\n            this._props = {\n                shades,\n                name: palette.name,\n                emoji: palette.emoji,\n            };\n        }\n    }\n\n    state = {\n        format: \"hex\",\n        level: 500,\n    };\n\n    changeFormat = (format) => this.setState({ format });\n\n    renderColorBoxes = () => {\n        const { format } = this.state;\n        return this._props.shades.map((c) => (\n            <Grid key={`${this._props.id}-${c.name}`} item sm={6} xs={12}>\n                <ColorBoxMain\n                    type=\"single\"\n                    colorId={c.id}\n                    background={c[format]}\n                    name={c.name}\n                />\n            </Grid>\n        ));\n    };\n\n    render() {\n        if (!this._props) {\n            return <Redirect to=\"/\" />;\n        }\n        return (\n            <Container className=\"Palette SingleColorPalette\" maxWidth={false}>\n                <PaletteNavbar\n                    level={this.state.level}\n                    format={this.state.format}\n                    changeFormat={this.changeFormat}\n                />\n                <Grid container className=\"Palette-colors\">\n                    {this.renderColorBoxes()}\n                    <Grid item sm={6} xs={12}>\n                        <ColorBoxMain type=\"back\" />\n                    </Grid>\n                </Grid>\n                <PaletteFooter\n                    name={this._props.name}\n                    emoji={this._props.emoji}\n                />\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    list: state.palettes.list,\n});\n\nexport default connect(mapStateToProps)(SingleColorPalette);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst NewPaletteAppBar = (props) => {\n    const { classes, open, handleDrawerOpen, handleDialogOpen } = props;\n    return (\n        <AppBar\n            color=\"transparent\"\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerOpen}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    Create a palette\n                </Typography>\n                <div className={classes.nav}>\n                    <Link to={{ pathname: \"/\", params: { back: true } }}>\n                        <Button variant=\"contained\" color=\"secondary\">\n                            Back\n                        </Button>\n                    </Link>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleDialogOpen}\n                    >\n                        Save\n                    </Button>\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default NewPaletteAppBar;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport chroma from \"chroma-js\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { addPaletteColor } from \"../redux/newPalette/actions\";\n\nconst styles = {\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: \"20px\",\n        \"& button\": {\n            marginTop: \"10px\",\n            width: \"100%\",\n            height: \"70px\",\n            color: (props) => {\n                return chroma(props.color).luminance() < 0.25\n                    ? \"white\"\n                    : \"black\";\n            },\n        },\n    },\n};\n\nclass NewPaletteAddColorForm extends React.Component {\n    state = {\n        name: \"\",\n    };\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) => {\n            if (!this.props.colors.find((c) => c.name === value)) return true;\n            return false;\n        });\n    }\n\n    componentWillUnmount() {\n        ValidatorForm.removeValidationRule(\"isColorNameUnique\");\n    }\n\n    handleChange = (e) => this.setState({ name: e.target.value });\n\n    handleSubmit = () => {\n        const { addPaletteColor, color } = this.props;\n        addPaletteColor({ name: this.state.name, color });\n        this.setState({ name: \"\" });\n    };\n\n    render() {\n        const { name } = this.state;\n        const { classes, color, colors } = this.props;\n        const disabled = name === \"\" || colors.length >= 20;\n        return (\n            <ValidatorForm\n                className={classes.root}\n                onSubmit={this.handleSubmit}\n            >\n                <TextValidator\n                    variant=\"outlined\"\n                    label=\"Color Name\"\n                    value={name}\n                    onChange={this.handleChange}\n                    validators={[\"required\", \"isColorNameUnique\"]}\n                    errorMessages={[\n                        \"This field is required\",\n                        \"Please enter a unique color name!\",\n                    ]}\n                />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    style={{\n                        backgroundColor: disabled ? \"lightgrey\" : color,\n                    }}\n                    disabled={disabled}\n                >\n                    {colors.length >= 20 ? \"Color Full\" : \"Add\"}\n                </Button>\n            </ValidatorForm>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    colors: state.newPalette.colors,\n});\n\nexport default withStyles(styles)(\n    connect(mapStateToProps, { addPaletteColor })(NewPaletteAddColorForm)\n);\n","export default [\n    {\n        name: \"Material UI Colors\",\n        id: \"material-ui-colors\",\n        emoji: \"🎨\",\n        colors: [\n            { name: \"red\", color: \"#F44336\" },\n            { name: \"pink\", color: \"#E91E63\" },\n            { name: \"purple\", color: \"#9C27B0\" },\n            { name: \"deeppurple\", color: \"#673AB7\" },\n            { name: \"indigo\", color: \"#3F51B5\" },\n            { name: \"blue\", color: \"#2196F3\" },\n            { name: \"lightblue\", color: \"#03A9F4\" },\n            { name: \"cyan\", color: \"#00BCD4\" },\n            { name: \"teal\", color: \"#009688\" },\n            { name: \"green\", color: \"#4CAF50\" },\n            { name: \"lightgreen\", color: \"#8BC34A\" },\n            { name: \"lime\", color: \"#CDDC39\" },\n            { name: \"yellow\", color: \"#FFEB3B\" },\n            { name: \"amber\", color: \"#FFC107\" },\n            { name: \"orange\", color: \"#FF9800\" },\n            { name: \"deeporange\", color: \"#FF5722\" },\n            { name: \"brown\", color: \"#795548\" },\n            { name: \"grey\", color: \"#9E9E9E\" },\n            { name: \"bluegrey\", color: \"#607D8B\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors v1\",\n        id: \"flat-ui-colors-v1\",\n        emoji: \"🤙\",\n        colors: [\n            { name: \"Turquoise\", color: \"#1abc9c\" },\n            { name: \"Emerald\", color: \"#2ecc71\" },\n            { name: \"PeterRiver\", color: \"#3498db\" },\n            { name: \"Amethyst\", color: \"#9b59b6\" },\n            { name: \"WetAsphalt\", color: \"#34495e\" },\n            { name: \"GreenSea\", color: \"#16a085\" },\n            { name: \"Nephritis\", color: \"#27ae60\" },\n            { name: \"BelizeHole\", color: \"#2980b9\" },\n            { name: \"Wisteria\", color: \"#8e44ad\" },\n            { name: \"MidnightBlue\", color: \"#2c3e50\" },\n            { name: \"SunFlower\", color: \"#f1c40f\" },\n            { name: \"Carrot\", color: \"#e67e22\" },\n            { name: \"Alizarin\", color: \"#e74c3c\" },\n            { name: \"Clouds\", color: \"#ecf0f1\" },\n            { name: \"Concrete\", color: \"#95a5a6\" },\n            { name: \"Orange\", color: \"#f39c12\" },\n            { name: \"Pumpkin\", color: \"#d35400\" },\n            { name: \"Pomegranate\", color: \"#c0392b\" },\n            { name: \"Silver\", color: \"#bdc3c7\" },\n            { name: \"Asbestos\", color: \"#7f8c8d\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors Dutch\",\n        id: \"flat-ui-colors-dutch\",\n        emoji: \"🇳🇱\",\n        colors: [\n            { name: \"Sunflower\", color: \"#FFC312\" },\n            { name: \"Energos\", color: \"#C4E538\" },\n            { name: \"BlueMartina\", color: \"#12CBC4\" },\n            { name: \"LavenderRose\", color: \"#FDA7DF\" },\n            { name: \"BaraRose\", color: \"#ED4C67\" },\n            { name: \"RadiantYellow\", color: \"#F79F1F\" },\n            { name: \"AndroidGreen\", color: \"#A3CB38\" },\n            { name: \"MediterraneanSea\", color: \"#1289A7\" },\n            { name: \"LavenderTea\", color: \"#D980FA\" },\n            { name: \"VerryBerry\", color: \"#B53471\" },\n            { name: \"PuffinsBill\", color: \"#EE5A24\" },\n            { name: \"PixelatedGrass\", color: \"#009432\" },\n            { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n            { name: \"ForgottenPurple\", color: \"#9980FA\" },\n            { name: \"HollyHock\", color: \"#833471\" },\n            { name: \"RedPigment\", color: \"#EA2027\" },\n            { name: \"TurkishAqua\", color: \"#006266\" },\n            { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n            { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n            { name: \"MagentaPurple\", color: \"#6F1E51\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors American\",\n        id: \"flat-ui-colors-american\",\n        emoji: \"🇺🇸\",\n        colors: [\n            { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n            { name: \"FadedPoster\", color: \"#81ecec\" },\n            { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n            { name: \"ShyMoment\", color: \"#a29bfe\" },\n            { name: \"CityLights\", color: \"#dfe6e9\" },\n            { name: \"MintLeaf\", color: \"#00b894\" },\n            { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n            { name: \"ElectronBlue\", color: \"#0984e3\" },\n            { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n            { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n            { name: \"SourLemon\", color: \"#ffeaa7\" },\n            { name: \"FirstDate\", color: \"#fab1a0\" },\n            { name: \"PinkGlamour\", color: \"#ff7675\" },\n            { name: \"Pico8Pink\", color: \"#fd79a8\" },\n            { name: \"AmericanRiver\", color: \"#636e72\" },\n            { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n            { name: \"OrangeVille\", color: \"#e17055\" },\n            { name: \"Chi-Gong\", color: \"#d63031\" },\n            { name: \"PrunusAvium\", color: \"#e84393\" },\n            { name: \"DraculaOrchid\", color: \"#2d3436\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors Aussie\",\n        id: \"flat-ui-colors-aussie\",\n        emoji: \"🇦🇺\",\n        colors: [\n            { name: \"Beekeeper\", color: \"#f6e58d\" },\n            { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n            { name: \"PinkGlamour\", color: \"#ff7979\" },\n            { name: \"JuneBud\", color: \"#badc58\" },\n            { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n            { name: \"Turbo\", color: \"#f9ca24\" },\n            { name: \"QuinceJelly\", color: \"#f0932b\" },\n            { name: \"CarminePink\", color: \"#eb4d4b\" },\n            { name: \"PureApple\", color: \"#6ab04c\" },\n            { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n            { name: \"MiddleBlue\", color: \"#7ed6df\" },\n            { name: \"Heliotrope\", color: \"#e056fd\" },\n            { name: \"ExodusFruit\", color: \"#686de0\" },\n            { name: \"DeepKoamaru\", color: \"#30336b\" },\n            { name: \"SoaringEagle\", color: \"#95afc0\" },\n            { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n            { name: \"SteelPink\", color: \"#be2edd\" },\n            { name: \"Blurple\", color: \"#4834d4\" },\n            { name: \"DeepCove\", color: \"#130f40\" },\n            { name: \"WizardGrey\", color: \"#535c68\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors British\",\n        id: \"flat-ui-colors-british\",\n        emoji: \"🇬🇧\",\n        colors: [\n            { name: \"ProtossPylon\", color: \"#00a8ff\" },\n            { name: \"Periwinkle\", color: \"#9c88ff\" },\n            { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n            { name: \"DownloadProgress\", color: \"#4cd137\" },\n            { name: \"Seabrook\", color: \"#487eb0\" },\n            { name: \"VanaDylBlue\", color: \"#0097e6\" },\n            { name: \"MattPurple\", color: \"#8c7ae6\" },\n            { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n            { name: \"SkirretGreen\", color: \"#44bd32\" },\n            { name: \"Naval\", color: \"#40739e\" },\n            { name: \"NasturcianFlower\", color: \"#e84118\" },\n            { name: \"LynxWhite\", color: \"#f5f6fa\" },\n            { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n            { name: \"MazarineBlue\", color: \"#273c75\" },\n            { name: \"BlueNights\", color: \"#353b48\" },\n            { name: \"HarleyOrange\", color: \"#c23616\" },\n            { name: \"HintOfPensive\", color: \"#dcdde1\" },\n            { name: \"ChainGangGrey\", color: \"#718093\" },\n            { name: \"PicoVoid\", color: \"#192a56\" },\n            { name: \"ElectroMagnetic\", color: \"#2f3640\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors Spanish\",\n        id: \"flat-ui-colors-spanish\",\n        emoji: \"🇪🇸\",\n        colors: [\n            { name: \"JacksonsPurple\", color: \"#40407a\" },\n            { name: \"C64Purple\", color: \"#706fd3\" },\n            { name: \"SwanWhite\", color: \"#f7f1e3\" },\n            { name: \"SummerSky\", color: \"#34ace0\" },\n            { name: \"CelestialGreen\", color: \"#33d9b2\" },\n            { name: \"LuckyPoint\", color: \"#2c2c54\" },\n            { name: \"Liberty\", color: \"#474787\" },\n            { name: \"HotStone\", color: \"#aaa69d\" },\n            { name: \"DevilBlue\", color: \"#227093\" },\n            { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n            { name: \"FlourescentRed\", color: \"#ff5252\" },\n            { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n            { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n            { name: \"MandarinSorbet\", color: \"#ffb142\" },\n            { name: \"SpicedButterNut\", color: \"#ffda79\" },\n            { name: \"EyeOfNewt\", color: \"#b33939\" },\n            { name: \"ChileanFire\", color: \"#cd6133\" },\n            { name: \"GreyPorcelain\", color: \"#84817a\" },\n            { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n            { name: \"Desert\", color: \"#ccae62\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors Indian\",\n        id: \"flat-ui-colors-indian\",\n        emoji: \"🇮🇳\",\n        colors: [\n            { name: \"OrchidOrange\", color: \"#FEA47F\" },\n            { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n            { name: \"HoneyGlow\", color: \"#EAB543\" },\n            { name: \"SweetGarden\", color: \"#55E6C1\" },\n            { name: \"FallingStar\", color: \"#CAD3C8\" },\n            { name: \"RichGardenia\", color: \"#F97F51\" },\n            { name: \"ClearChill\", color: \"#1B9CFC\" },\n            { name: \"WhitePepper\", color: \"#F8EFBA\" },\n            { name: \"Keppel\", color: \"#58B19F\" },\n            { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n            { name: \"FieryFuchsia\", color: \"#B33771\" },\n            { name: \"BlueBell\", color: \"#3B3B98\" },\n            { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n            { name: \"OasisStream\", color: \"#9AECDB\" },\n            { name: \"BrightUbe\", color: \"#D6A2E8\" },\n            { name: \"MagentaPurple\", color: \"#6D214F\" },\n            { name: \"EndingNavyBlue\", color: \"#182C61\" },\n            { name: \"SasquatchSocks\", color: \"#FC427B\" },\n            { name: \"PineGlade\", color: \"#BDC581\" },\n            { name: \"HighlighterLavender\", color: \"#82589F\" },\n        ],\n    },\n    {\n        name: \"Flat UI Colors French\",\n        id: \"flat-ui-colors-french\",\n        emoji: \"🇫🇷\",\n        colors: [\n            { name: \"FlatFlesh\", color: \"#fad390\" },\n            { name: \"MelonMelody\", color: \"#f8c291\" },\n            { name: \"Livid\", color: \"#6a89cc\" },\n            { name: \"Spray\", color: \"#82ccdd\" },\n            { name: \"ParadiseGreen\", color: \"#b8e994\" },\n            { name: \"SquashBlossom\", color: \"#f6b93b\" },\n            { name: \"MandarinRed\", color: \"#e55039\" },\n            { name: \"AzraqBlue\", color: \"#4a69bd\" },\n            { name: \"Dupain\", color: \"#60a3bc\" },\n            { name: \"AuroraGreen\", color: \"#78e08f\" },\n            { name: \"IcelandPoppy\", color: \"#fa983a\" },\n            { name: \"TomatoRed\", color: \"#eb2f06\" },\n            { name: \"YueGuangBlue\", color: \"#1e3799\" },\n            { name: \"GoodSamaritan\", color: \"#3c6382\" },\n            { name: \"Waterfall\", color: \"#38ada9\" },\n            { name: \"CarrotOrange\", color: \"#e58e26\" },\n            { name: \"JalapenoRed\", color: \"#b71540\" },\n            { name: \"DarkSapphire\", color: \"#0c2461\" },\n            { name: \"ForestBlues\", color: \"#0a3d62\" },\n            { name: \"ReefEncounter\", color: \"#079992\" },\n        ],\n    },\n];\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SketchPicker } from \"react-color\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { Button } from \"@material-ui/core\";\nimport NewPaletteAddColorForm from \"./NewPaletteAddColorForm\";\nimport {\n    getAllColorsFromPalettes,\n    getRandomColor,\n} from \"../utils/paletteHelper\";\nimport { clearPalette, addPaletteColor } from \"../redux/newPalette/actions\";\nimport data from \"../data/ColorPalette.data\";\n\nconst NewPaletteDrawer = (props) => {\n    const theme = useTheme();\n    const [color, setColor] = useState(\"#417769\");\n    const {\n        classes,\n        colors,\n        open,\n        handleDrawerClose,\n        clearPalette,\n        addPaletteColor,\n    } = props;\n\n    let copies = getAllColorsFromPalettes(data.slice(0, data.length));\n\n    const addRandomColor = () => {\n        if (copies.length === 0) {\n            console.log(\"no more random colors.\");\n            return;\n        }\n\n        const rc = getRandomColor(copies);\n        const getNotUnique = (c) =>\n            c.name === rc.name ||\n            c.color.toLowerCase() === rc.color.toLowerCase();\n        const getUnique = (c) =>\n            c.name !== rc.name &&\n            c.color.toLowerCase() !== rc.color.toLowerCase();\n\n        if (colors.findIndex(getNotUnique) !== -1) {\n            copies = copies.filter(getUnique);\n            // console.log(\"find duplicated\");\n            addRandomColor();\n        } else {\n            // console.log(\"unique\");\n            addPaletteColor(rc);\n        }\n    };\n\n    const disabled = copies.length === 0 || colors.length >= 20;\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            // variant=\"permanent\"\n            anchor=\"left\"\n            open={open}\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <div className={classes.drawerHeader}>\n                <IconButton onClick={handleDrawerClose}>\n                    {theme.direction === \"ltr\" ? (\n                        <ChevronLeftIcon />\n                    ) : (\n                        <ChevronRightIcon />\n                    )}\n                </IconButton>\n            </div>\n            <Divider />\n            <div className={classes.drawerBody}>\n                <Typography gutterBottom variant=\"h6\">\n                    Design your palette\n                </Typography>\n                <SketchPicker\n                    Chrome\n                    color={color}\n                    onChangeComplete={(e) => setColor(e.hex)}\n                />\n                <div className=\"btns\">\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={clearPalette}\n                    >\n                        Clear Palette\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={addRandomColor}\n                        disabled={disabled}\n                    >\n                        Random Color\n                    </Button>\n                </div>\n                <NewPaletteAddColorForm color={color} />\n            </div>\n        </Drawer>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    colors: state.newPalette.colors,\n});\n\nexport default connect(mapStateToProps, { clearPalette, addPaletteColor })(\n    NewPaletteDrawer\n);\n","export const getAllColorsFromPalettes = (list) => {\n    const merge = (array1, array2) => array1.concat(array2.colors);\n    return list.reduce(merge, []);\n};\n\nexport const getRandomColor = (colors) => {\n    const index = Math.floor(Math.random() * colors.length);\n    return colors[index];\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { setPaletteName } from \"../redux/newPalette/actions\";\n\nclass NewPaletteAddNameForm extends React.Component {\n    state = {\n        name: \"\",\n    };\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isNameUnique\", (value) => {\n            if (\n                !this.props.list.find(\n                    (p) => p.name.toLowerCase() === value.toLowerCase()\n                )\n            )\n                return true;\n            return false;\n        });\n    }\n    componentWillUnmount() {\n        ValidatorForm.removeValidationRule(\"isNameUnique\");\n    }\n\n    handleChange = (e) => this.setState({ name: e.target.value });\n    handleNext = () => this.props.setPaletteName(this.state.name);\n    render() {\n        const { handleDialogClose } = this.props;\n        const { name } = this.state;\n        return (\n            <ValidatorForm onSubmit={this.handleNext}>\n                <DialogTitle id=\"form-dialog-title\">\n                    Choose a Palette Name\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter a unique name for your new palette.\n                    </DialogContentText>\n                    <TextValidator\n                        autoFocus\n                        margin=\"dense\"\n                        label=\"Palette Name\"\n                        fullWidth\n                        variant=\"outlined\"\n                        value={name}\n                        onChange={this.handleChange}\n                        validators={[\"required\", \"isNameUnique\"]}\n                        errorMessages={[\n                            \"This field is required\",\n                            \"Please enter a unique palette name!\",\n                        ]}\n                    />\n                </DialogContent>\n                <DialogActions style={{ margin: \"0px 20px 10px 20px\" }}>\n                    <Button onClick={handleDialogClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={name === \"\"}\n                    >\n                        Next\n                    </Button>\n                </DialogActions>\n            </ValidatorForm>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    paletteName: state.newPalette.name,\n    list: state.palettes.list,\n});\n\nexport default connect(mapStateToProps, { setPaletteName })(\n    NewPaletteAddNameForm\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"emoji-mart/css/emoji-mart.css\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { Picker } from \"emoji-mart\";\nimport { setPaletteEmoji } from \"../redux/newPalette/actions\";\n\nconst NewPaletteAddEmoji = (props) => {\n    const { emoji, setPaletteEmoji, handleSubmit, handleCancel } = props;\n    const handleSelect = (e) => setPaletteEmoji(e.native);\n    return (\n        <div>\n            <DialogTitle id=\"form-dialog-title\">Choose a Emoji</DialogTitle>\n            <DialogContent>\n                <Picker set=\"apple\" onSelect={handleSelect} />\n            </DialogContent>\n            <DialogActions style={{ margin: \"0px 20px 10px 20px\" }}>\n                <Button color=\"primary\" onClick={handleCancel}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    disabled={emoji === \"\"}\n                >\n                    Done\n                </Button>\n            </DialogActions>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    emoji: state.newPalette.emoji,\n});\n\nexport default connect(mapStateToProps, { setPaletteEmoji })(\n    NewPaletteAddEmoji\n);\n","import React from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport NewPaletteAddNameForm from \"../NewPaletteAddNameForm\";\nimport NewPaletteAddEmoji from \"../NewPaletteAddEmoji\";\n\nconst NewPaletteSaveDialog = (props) => {\n    const { open, next, handleDialogClose, handleCancel, handleSubmit } = props;\n    return (\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\">\n            {next === false ? (\n                <NewPaletteAddNameForm handleDialogClose={handleDialogClose} />\n            ) : (\n                <NewPaletteAddEmoji\n                    handleCancel={handleCancel}\n                    handleSubmit={handleSubmit}\n                />\n            )}\n        </Dialog>\n    );\n};\n\nexport default NewPaletteSaveDialog;\n","import React from \"react\";\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport ColorBoxMain from \"./ColorBoxMain\";\n\nconst SortableColorBoxList = ({ classes, colors }) => {\n    return (\n        <div className={classes.contentBody}>\n            {colors.map((c, i) => (\n                <ColorBoxMain\n                    key={`new_color_${c.name}`}\n                    index={i}\n                    type=\"canDelete\"\n                    name={c.name}\n                    backgroundColor={c.color}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default SortableContainer(SortableColorBoxList);\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    nav: {\n        marginLeft: \"auto\",\n        \"& button\": {\n            margin: \"0px 5px\",\n        },\n    },\n    appBar: {\n        backgroundColor: \"white\",\n        fontSize: \"20px\",\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        [theme.breakpoints.down(\"xs\")]: {\n            \"& .MuiTypography-root\": {\n                fontSize: \"16px\",\n            },\n        },\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: \"none\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n        justifyContent: \"flex-end\",\n    },\n    drawerBody: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        \"& .btns\": {\n            margin: \"10px 30px\",\n            \"& button\": {\n                width: \"100%\",\n                marginTop: \"10px\",\n            },\n        },\n    },\n    content: {\n        flexGrow: 1,\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n        height: \"calc(100vh - 64px)\",\n    },\n    contentShift: {\n        transition: theme.transitions.create(\"margin\", {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    contentBody: {\n        height: \"100%\",\n    },\n}));\n\nexport default useStyles;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport arrayMove from \"array-move\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NewPaletteAppBar from \"../components/NewPaletteAppBar\";\nimport NewPaletteDrawer from \"../components/NewPaletteDrawer\";\nimport NewPaletteSaveDialog from \"../components/Dialog/NewPaletteSaveDialog\";\nimport SortableColorBoxList from \"../components/SortableColorBoxList\";\nimport AlertMessage from \"../components/AlertMessage\";\nimport { addPalette } from \"../redux/palettes/actions\";\nimport useStyles from \"../styles/NewPaletteMain.styles\";\nimport {\n    alertError,\n    alertErrorThenRefreshPage,\n    ALERT_DISMISS_DELAY,\n} from \"../redux/alert/actions\";\nimport {\n    setPaletteName,\n    setPaletteEmoji,\n    sortPaletteColors,\n} from \"../redux/newPalette/actions\";\n\nconst NewPaletteMain = (props) => {\n    const classes = useStyles();\n    const [openDrawer, setOpenDrawer] = useState(false);\n    const handleDrawerOpen = () => setOpenDrawer(true);\n    const handleDrawerClose = () => setOpenDrawer(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const handleDialogOpen = () => setOpenDialog(true);\n    const handleDialogClose = () => setOpenDialog(false);\n    const {\n        name,\n        emoji,\n        colors,\n        setPaletteName,\n        setPaletteEmoji,\n        addPalette,\n        sortPaletteColors,\n        alertError,\n        history,\n        alertErrorThenRefreshPage,\n    } = props;\n\n    const reset = () => {\n        handleDialogClose();\n        setTimeout(() => {\n            setPaletteName(\"\");\n            setPaletteEmoji(\"\");\n        }, 500);\n    };\n\n    const handleSubmit = () => {\n        reset();\n        addPalette({\n            name,\n            emoji,\n            colors,\n        })\n            .then(() => history.push(\"/\"))\n            .catch((e) => {\n                if (e.status === 401) {\n                    alertErrorThenRefreshPage(\n                        e.data.error.message,\n                        ALERT_DISMISS_DELAY\n                    );\n                } else {\n                    alertError(e.data.error.message);\n                }\n            });\n    };\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        sortPaletteColors(arrayMove(colors, oldIndex, newIndex));\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <NewPaletteAppBar\n                classes={classes}\n                open={openDrawer}\n                handleDrawerOpen={handleDrawerOpen}\n                handleDialogOpen={handleDialogOpen}\n            />\n            <NewPaletteDrawer\n                classes={classes}\n                open={openDrawer}\n                handleDrawerClose={handleDrawerClose}\n            />\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: openDrawer,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                {/* color boxes */}\n                <SortableColorBoxList\n                    axis=\"xy\"\n                    classes={classes}\n                    colors={colors}\n                    onSortEnd={onSortEnd}\n                />\n            </main>\n            <NewPaletteSaveDialog\n                open={openDialog}\n                next={name !== \"\"}\n                handleDialogClose={handleDialogClose}\n                handleCancel={reset}\n                handleSubmit={handleSubmit}\n            />\n            <AlertMessage />\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    name: state.newPalette.name,\n    emoji: state.newPalette.emoji,\n    colors: state.newPalette.colors,\n});\n\nexport default withRouter(\n    connect(mapStateToProps, {\n        setPaletteName,\n        setPaletteEmoji,\n        addPalette,\n        sortPaletteColors,\n        alertError,\n        alertErrorThenRefreshPage,\n    })(NewPaletteMain)\n);\n","import React, { Component } from \"react\";\n\nclass AuthPage extends Component {\n    constructor(props) {\n        super(props);\n        if (!this.props.isAuthenticated) {\n            this.props.history.push(\"/\");\n        }\n    }\n    render() {\n        if (this.props.isAuthenticated) {\n            return <>{this.props.children}</>;\n        } else {\n            return <></>;\n        }\n    }\n}\n\nexport default AuthPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport Main from \"./pages/Main\";\nimport Palette from \"./pages/Palette\";\nimport SingleColorPalette from \"./pages/SingleColorPalette\";\nimport NewPaletteMain from \"./pages/NewPaletteMain\";\nimport AuthPage from \"./pages/AuthPage\";\n\nconst App = (props) => {\n    const { location, history, isAuthenticated } = props;\n    const { params } = props.location;\n    const slideEffect =\n        (params && params.back) || (history && history.action === \"POP\")\n            ? \"slide-out\"\n            : \"slide-in\";\n    return (\n        <TransitionGroup>\n            <CSSTransition\n                timeout={300}\n                classNames={slideEffect}\n                key={location.key}\n            >\n                <Switch location={location}>\n                    <Route\n                        exact\n                        path=\"/palette/new\"\n                        render={(props) => (\n                            <AuthPage\n                                isAuthenticated={isAuthenticated}\n                                history={history}\n                            >\n                                <NewPaletteMain {...props} />\n                            </AuthPage>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/palette/:id\"\n                        render={(props) => <Palette {...props} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/palette/:id/:colorId\"\n                        render={(props) => <SingleColorPalette {...props} />}\n                    />\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => (\n                            <Main isAuthenticated={isAuthenticated} />\n                        )}\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </CSSTransition>\n        </TransitionGroup>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.user.isAuthenticated,\n});\n\nexport default withRouter(connect(mapStateToProps)(App));\n","import types from \"./types\";\n\nconst INIT_STATE = {\n    name: \"\",\n    emoji: \"\",\n    colors: [],\n};\n\nconst newPaletteReducer = (state = INIT_STATE, actions) => {\n    switch (actions.type) {\n        case types.SET_NAME:\n            return {\n                ...state,\n                name: actions.payload,\n            };\n        case types.SET_EMOJI:\n            return {\n                ...state,\n                emoji: actions.payload,\n            };\n        case types.ADD_COLOR:\n            return {\n                ...state,\n                colors: [...state.colors, actions.payload],\n            };\n        case types.REMOVE_COLOR:\n            return {\n                ...state,\n                colors: state.colors.filter((c) => c.name !== actions.payload),\n            };\n        case types.SORT:\n            return {\n                ...state,\n                colors: [...actions.payload],\n            };\n        case types.CLEAR:\n            return {\n                ...INIT_STATE,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default newPaletteReducer;\n","import types from \"./types\";\nimport data from \"../../data/ColorPalette.data\";\n\nconst INIT_STATE = {\n    list: data,\n};\n\nconst paletteListReducer = (state = INIT_STATE, actions) => {\n    switch (actions.type) {\n        case types.ADD_PALETTE:\n            return {\n                list: [...state.list, actions.palette],\n            };\n        case types.REMOVE_PALETTE:\n            return {\n                list: [...state.list.filter((p) => p.id !== actions.id)],\n            };\n        case types.SET_PALETTES:\n            return {\n                list: [...actions.palettes],\n            };\n        case types.RESET_PALETTES:\n            return {\n                list: data,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default paletteListReducer;\n","import types from \"./types\";\n\nconst INIT_STATE = {\n    isAuthenticated: false,\n    user: {},\n};\n\nconst userReducer = (state = INIT_STATE, actions) => {\n    switch (actions.type) {\n        case types.SET_USER:\n            return {\n                isAuthenticated: !!Object.keys(actions.user).length,\n                user: actions.user,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;\n","import types from \"./types\";\n\nconst INIT_STATE = {\n    open: false,\n    type: \"\",\n    message: \"\",\n};\n\nconst alertReducer = (state = INIT_STATE, actions) => {\n    switch (actions.type) {\n        case types.ALERT_SUCCESS:\n        case types.ALERT_ERROR:\n            return {\n                open: true,\n                type: actions.type,\n                message: actions.msg,\n            };\n        case types.ALERT_DISMISS:\n            return {\n                ...state,\n                open: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default alertReducer;\n","import { combineReducers } from \"redux\";\nimport newPaletteReducer from \"./newPalette/reducer\";\nimport paletteListReducer from \"./palettes/reducer\";\nimport userReducer from \"./user/reducer\";\nimport alertReducer from \"./alert/reducer\";\n\nconst rootReducer = combineReducers({\n    newPalette: newPaletteReducer,\n    palettes: paletteListReducer,\n    user: userReducer,\n    alert: alertReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./rootReducer\";\nexport const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk), composeWithDevTools())\n);\n// export const store = createStore(rootReducer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { initUser } from \"./utils/userHelper\";\nimport { setCurrentUser, logout } from \"./redux/user/actions\";\nimport { reloadPalettes, setUserPalettes } from \"./redux/palettes/actions\";\n\n// Reload user if jwt token exists and is not expired.\nlet user = initUser();\nif (user) {\n    store.dispatch(setUserPalettes([]));\n    store.dispatch(setCurrentUser(user));\n    reloadPalettes()\n        .then((res) => store.dispatch(setUserPalettes(res.palettes)))\n        .catch(() => store.dispatch(logout()));\n} else {\n    store.dispatch(logout());\n}\n\nalert(process.env.PUBLIC_URL);\n\n// render app\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}